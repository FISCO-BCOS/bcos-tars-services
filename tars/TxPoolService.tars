#include "Common.tars"
#include "Transaction.tars"
#include "TransactionSubmitResult.tars"

module bcostars {
    struct ConsensusNode {
        1 optional vector<unsigned byte> nodeID;
        2 optional long weight;
    };

    interface TxPoolService {
        Error asyncSubmit(vector<unsigned byte> tx, out TransactionSubmitResult result);
        Error asyncSealTxs(long txsLimit, vector<vector<unsigned byte>> avoidTxs, out vector<vector<unsigned byte>> return1, out vector<vector<unsigned byte>> return2);
        Error asyncMarkTxs(vector<vector<unsigned byte>> txHashs, bool sealedFlag);
        Error asyncVerifyBlock(vector<unsigned byte> generatedNodeID, vector<unsigned byte> block, out bool result);
        Error asyncFillBlock(vector<vector<unsigned byte>> txHashs, out vector<Transaction> filled);
        Error asyncNotifyBlockResult(long blockNumber, vector<TransactionSubmitResult> result);
        Error asyncNotifyTxsSyncMessage(Error error, string id, vector<unsigned byte> nodeID, vector<unsigned byte> data);
        Error notifyConnectedNodes(vector<vector<unsigned byte>> connectedNodes);
        Error notifyConsensusNodeList(vector<ConsensusNode> consensusNodeList);
        Error notifyObserverNodeList(vector<ConsensusNode> observerNodeList);
    };
};